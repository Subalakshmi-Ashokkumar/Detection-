# -*- coding: utf-8 -*-
"""Untitled7.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1D4l2RAq9QiIv_udsNANW05rY7iiwrJJ4
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report

# Sample dataset (you can replace this with a CSV file)
data = {
    'text': [
        'The government passed a new policy to improve education.',
        'NASA confirms evidence of water on Mars.',
        'Aliens landed in the desert and took over a town.',
        'Scientists discover a cure for the common cold.',
        'Fake: Celebrity found living on the moon.',
        'True: Local elections to be held next week.',
        'Fake: Dinosaur spotted in the Himalayas.',
        'True: Economy sees a 5% rise this quarter.'
    ],
    'label': [1, 1, 0, 1, 0, 1, 0, 1]  # 1: Real, 0: Fake
}

# Convert to DataFrame
df = pd.DataFrame(data)

# Split the dataset
X_train, X_test, y_train, y_test = train_test_split(df['text'], df['label'], test_size=0.25, random_state=42)

# TF-IDF Vectorization
vectorizer = TfidfVectorizer()
X_train_tfidf = vectorizer.fit_transform(X_train)
X_test_tfidf = vectorizer.transform(X_test)

# Logistic Regression Model
model = LogisticRegression()
model.fit(X_train_tfidf, y_train)

# Predictions
y_pred = model.predict(X_test_tfidf)

# Evaluation
print("Accuracy:", accuracy_score(y_test, y_pred))
print("\nConfusion Matrix:\n", confusion_matrix(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))

# Example: Predicting new text
new_text = ["Aliens attack earth in broad daylight"]
new_text_tfidf = vectorizer.transform(new_text)
prediction = model.predict(new_text_tfidf)
print("\nPrediction for new text:", "Real" if prediction[0] == 1 else "Fake")